version
library(readxl)
BostonHousing <- read_excel("Practice-datasets-R/Boston-Housing/BostonHousing.csv")
View(BostonHousing)
library(readxl)
BostonHousing <- read_excel("Practice-datasets-R/Boston-Housing/BostonHousing.csv")
View(BostonHousing)
library(readxl)
BostonHousing <- read_excel("Practice-datasets-R/Boston-Housing/BostonHousing.csv")
View(BostonHousing)
library(forecast)
install.packages("psych")
>library(psych)
library(forecast)
install.packages("scales")
library(forecast)
library(forecast)
library(forecast)
install.packages('forecast', dependencies = TRUE)
library(forecast)
install.packages("forecast")
install.packages("forecast")
library(forecast)
install.packages("RcppArmadillo")
mean(boston.df$CRIM)
boston.df<-read.csv("BostonHousing.csv", header = TRUE)
boston.df<-read.csv("BostonHousing.csv", header = TRUE)
setwd("~/Practice-datasets-R/Boston-Housing")
boston.df<-read.csv("BostonHousing.csv", header = TRUE)
# Loading the dataset
boston.df<-read.csv("BostonHousing.csv", header = TRUE)
dim(boston.df)
head(boston.df)
tail(boston.df)
mean(boston.df$MEDV)
names(boston.df$CRIM)
mean(boston.df$CRIM)
sd(boston.df$CRIM)
min(boston.df$CRIM)
max(boston.df$CRIM)
median(boston.df$CRIM)
train.rows <- sample(rownames(boston.df), dim(boston.df)[1]*0.6)
train.data <- boston.df[train.rows,]
train.data
valid.rows <- setdiff(rownames(boston.df),train.rows)
valid.data <- boston.df[valid.rows,]
reg <- lm(MEDV ~CRIM, data = boston.df, subset = train.rows)
reg$coefficients
tr.res <- data.frame(train.data$MEDV, reg$fitted.values, reg$residuals)
head(tr.res)
pred <- predict(reg, newdata=valid.data)
vl.res <- data.frame(valid.data$MEDV, pred, residuals = valid.data$MEDV - pred)
head(vl.res)
reg2 <- lm(MEDV ~ CRIM + AGE, data = boston.df, subset = train.rows)
reg2$coefficients
reg3 <- lm(MEDV ~ ., data = boston.df, subset = train.rows)
reg3$coefficients
library(forecast)
accuracy(reg$fitted.values, train.data$MEDV)
install.packages("RcppArmadillo")
install.packages('devtools')
install.packages('devtools')
sun(is.na(boston.df$CRIM))
library(forecast)
boston.df2 = boston.df
rows.to.missing<-sample(row.names(boston.df2), 10)
boston.df2[rows.to.missing]$CRIM<-NA
boston.df2<- boston.df
rows.to.missing<-sample(row.names(boston.df2), 10)
boston.df2[rows.to.missing]$CRIM<-NA
boston.df2[rows.to.missing,]$CRIM<-NA
summary(boston.df2$CRIM)
boston.df2[rows.to.missing,]$CRIM<-median(boston.df2$CRIM, na.rm = TRUE)
median(boston.df2$CRIM, na.rm = TRUE)
boston.df2[rows.to.missing,]$CRIM<-median(boston.df2$CRIM, na.rm = TRUE)
summary(boston.df2)
describe(boston.df2)
plot(boston.df$MEDV~boston.df$LSTAT,xlab="MEDV", ylab = "LSTAT")
plot(boston.df$MEDV~boston.df$LSTAT,xlab="MEDV", ylab = "LSTAT", col=ifelse(boston.df$CHAS == 1, "green", "orange"))
plot(boston.df$MEDV~boston.df$LSTAT,xlab="MEDV", ylab = "LSTAT", col=ifelse(boston.df$CHAS == 1, "red", "orange"))
plot(boston.df$MEDV~boston.df$LSTAT,xlab="MEDV", ylab = "LSTAT", col=ifelse(boston.df$CHAS == 1, "red", "blue"))
plot(boston.df$MEDV~boston.df$LSTAT,xlab="MEDV", ylab = "LSTAT", col=ifelse(boston.df$CHAS == 1, "red", "green"))
library(ggplot2)
ggplot(boston.df, aes(y=NOX, x=LSTAT, colour=CAT.MEDV))+geom_point(alpha=0.6)
ggplot(boston.df, aes(y=MEDV, x=LSTAT, colour=CHAS))+geom_point(alpha=0.6)
aggregate((boston.df$MEDV, by=list(boston.df$CHAS), FUN = mean))
aggregate(boston.df$MEDV, by=list(boston.df$CHAS), FUN = mean)
data.for.plot<-aggregate(boston.df$MEDV, by=list(boston.df$CHAS), FUN = mean)
list(boston.df$CHAS)
data.for.plot<-aggregate(boston.df$MEDV, by=list(boston.df$CHAS), FUN = mean)
aggregate(boston.df$MEDV, by=list(boston.df$CHAS), FUN = mean)
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
ggplot(data.for.plot) + geom_bar(aes(x = CHAS, y = MeanMEDV), stat = "identity")
ggplot(data.for.plot) + geom_bar(aes(x=CHAS, y=MeanMEDV),stat = "identity")
